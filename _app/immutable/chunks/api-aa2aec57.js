function p(e,t){const c={...t};let n=e;for(const[r,s]of Object.entries(t)){const i=n.replace(`[${r}]`,s);i!==n&&(n=i,delete c[r])}const o=new URLSearchParams(c).toString();return`${n}${o?`?${o}`:""}`}const f=Symbol("response");async function l(e,t,c){let{ssrCache:n,fetch:o,params:r,...s}=c;if(r=r||{},!o){if(typeof window>"u")throw new Error("Missing config.fetch");o=window.fetch}n&&typeof window>"u"&&(s.headers=new Headers(s.headers),s.headers.append("Svelte-Cache",`${n}`)),s.method=e;const i=`/${p(t,r)}`,a=await o(i,s);if(!a.ok){const d=new Error(`${e} ${i} failed: ${a.status} ${a.statusText}`);throw d[f]=a,d}const u=await a.json();return u[f]=a,u}const h={get(e,t){return l("GET",e,t||{})}};function w(e){if(typeof e=="object"&&e!==null)return e[f]}function $(e){const t=w(e);if(t)return t.status}export{h as a,$ as g};
