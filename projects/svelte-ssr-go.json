{"slug":"svelte-ssr-go","title":"Svelte SSR go","released":"2021-07-24","content":"<p><a href=\"https://github.com/bfanger/svelte-ssr-go\">Svelte SSR Go</a> is een proof-of-concept om <a href=\"https://svelte.dev/\">Svelte</a> componenten serverside te renderen (SSR) via een andere servertaal dan node of deno.</p>\n<!-- De meeste programmeertalen (en zelfs [databases](https://plv8.github.io/)) hebben wel een manier om een javascript engine zoals [v8](https://v8.dev/) te gebruken. -->\n<p>Voor het poc heb ik <a href=\"https://golang.org/\">Go</a> als servertaal gebruikt. Met behulp van <a href=\"https://github.com/rogchap/v8go\">v8go</a> als embedded javascript runtime en <a href=\"https://esbuild.github.io/\">esbuild</a> met de <a href=\"https://github.com/EMH333/esbuild-svelte\">esbuild-svelte</a> plugin het compilenv an svelte component en deze te bundelen naar een javascript en css bestanden.</p>\n<p>Het was een interesant en geslaagd experiment, maar zou adviseren waar mogelijk <a href=\"https://kit.svelte.dev/\">SvelteKit</a> op een node server te draaien.</p>\n<!-- Het werkt, inclusief livereload, maar maast dat je geen browers api's kunt gebruiken (window is undefined) heb je ook geen toegang tot [Node.js](https://nodejs.org/en/) api's. -->\n<!-- Gerelateerd project: [bfanger/enhanced-v8go](https://github.com/bfanger/enhanced-v8go) -->\n","before":"language-dx-benchmark","after":"flowcart-vr","image":{"src":"/build/img/svelte-ssr-go.png","width":721,"height":435}}