window.__sveltekit_data = (function(a,b){return {type:b,nodes:[null,{type:b,data:{slug:"language-dx-benchmark",title:"Language DX Benchmark",released:"2021-08-02",content:"\u003Cp\u003EVanwege een frustrerend trage development cyclus van een op \u003Ca href=\"https:\u002F\u002Fumbraco.com\u002F\"\u003EUmbraco\u003C\u002Fa\u003E gebaseerde website heb ik een \u003Ca href=\"https:\u002F\u002Fgithub.com\u002Fbfanger\u002Flanguage-dx-benchmark\"\u003ELanguage DX Benchmark\u003C\u002Fa\u003E geschreven die diverse programeertalen met elkaar vergelijkt.\u003C\u002Fp\u003E\n\u003Cp\u003EDe regels zijn simpel: Zet een json string om naar een object, lees twee waarden uit het object (1 en 2), tel deze bij elkaar op en toon het resultaat (3).\u003C\u002Fp\u003E\n\u003Cp\u003EDit is een eenvoudige taak, maar in plaats van te testen niet hoe vaak per seconde je deze operatie kan uitvoeren, test deze DX benchmark hoelang het duurt voordat je het resultaat van een code aanpassing kan zien.\n(DX = Developer Experience)\u003C\u002Fp\u003E\n\u003Cp\u003EDeze cijfers bevestigen waarom ik onder andere Javascript, \u003Ca href=\"https:\u002F\u002Fphp.net\"\u003EPHP\u003C\u002Fa\u003E en \u003Ca href=\"https:\u002F\u002Fgolang.org\u002F\"\u003EGo\u003C\u002Fa\u003E fijn vind werken en \u003Ca href=\"https:\u002F\u002Fdocs.microsoft.com\u002Fnl-nl\u002Fdotnet\u002F\"\u003Edotnet\u003C\u002Fa\u003E juist frustrerend.\nEn ook waarom ik typescript pas sinds \u003Ca href=\"https:\u002F\u002Fbabeljs.io\u002Fdocs\u002Fen\u002Fbabel-preset-typescript\"\u003E@babel\u002Fpreset-typescript\u003C\u002Fa\u003E\nkan aanraden.\u003C\u002Fp\u003E\n",before:"beurtbalkje",after:"svelte-ssr-go",image:{src:"\u002Fbuild\u002Fimg\u002Flanguage-dx-benchmark.png",alt:a,width:1011,height:901}},uses:{dependencies:a,params:["project"],parent:a,url:a}}]}}(void 0,"data"))